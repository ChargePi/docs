"use strict";(self.webpackChunkchargepi=self.webpackChunkchargepi||[]).push([[5],{1569:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"go-client/installing-libraries","title":"\ud83d\udcbb Installing libraries","description":"Read before continuing","source":"@site/docs/go-client/installing-libraries.md","sourceDirName":"go-client","slug":"/go-client/installing-libraries","permalink":"/docs/go-client/installing-libraries","draft":false,"unlisted":false,"editUrl":"https://github.com/ChargePi/ChargePi-docs/edit/master/docs/go-client/installing-libraries.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udee0\ufe0f Configuration","permalink":"/docs/go-client/configuration"},"next":{"title":"\ud83c\udfc3 Running the client","permalink":"/docs/go-client/running-the-client"}}');var r=i(5813),l=i(7814);const t={sidebar_position:2},c="\ud83d\udcbb Installing libraries",o={},a=[{value:"Read before continuing",id:"read-before-continuing",level:2},{value:"Building libnfc for PN532",id:"building-libnfc-for-pn532",level:2},{value:"Installing rpi-ws281x library",id:"installing-rpi-ws281x-library",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"-installing-libraries",children:"\ud83d\udcbb Installing libraries"})}),"\n",(0,r.jsx)(e.h2,{id:"read-before-continuing",children:"Read before continuing"}),"\n",(0,r.jsx)(e.p,{children:"The process of installing the dependencies was automated by creating a shell script for installing the necessary\ndependencies. The script has only one argument: weather or not you want to install Go on your device. It is recommended\nyou use this if you do not want to (re)configure anything."}),"\n",(0,r.jsx)(e.p,{children:"Usage:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:" cd ~/ChargePi-go/docs\n chmod +x install-dependencies.sh\n ./install-dependencies.sh 1\n"})}),"\n",(0,r.jsx)(e.h2,{id:"building-libnfc-for-pn532",children:"Building libnfc for PN532"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Get and extract the libnfc:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:" cd ~\n mkdir libnfc && cd libnfc/\n wget https://github.com/nfc-tools/libnfc/releases/download/libnfc-1.8.0/libnfc-1.8.0.tar.bz2\n tar -xvjf libnfc-1.8.0.tar.bz2\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Next two steps may vary for your reader and communication protocol"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create PN532 configuration:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:" cd libnfc-1.8.0\n sudo mkdir /etc/nfc\n sudo mkdir /etc/nfc/devices.d\n sudo cp contrib/libnfc/pn532_uart_on_rpi.conf.sample /etc/nfc/devices.d/pn532_uart_on_rpi.conf \n sudo nano /etc/nfc/devices.d/pn532_uart_on_rpi.conf\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Add the line at the end of the file:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"allow_intrusive_scan = true\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Install dependencies and configure:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:" sudo apt-get install autoconf\n sudo apt-get install libtool\n sudo apt-get install libpcsclite-dev libusb-dev\n autoreconf -vis\n ./configure --with-drivers=pn532_uart --sysconfdir=/etc --prefix=/usr\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Build the library:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"sudo make clean\nsudo make install all\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"installing-rpi-ws281x-library",children:"Installing rpi-ws281x library"}),"\n",(0,r.jsxs)(e.p,{children:["Follow the instructions from the ",(0,r.jsx)(e.a,{href:"https://github.com/jgarff/rpi_ws281x",children:"maintainer's repository"}),"."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"TLDR; Use the instructions here"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/jgarff/rpi_ws281x\ncd rpi_ws281x\nmkdir build\ncd build\ncmake -D BUILD_SHARED=OFF -D BUILD_TEST=ON ..\ncmake --build .\nsudo make install\n"})}),"\n",(0,r.jsxs)(e.p,{children:["To be able to use this C library in Go, it must be installed. You can do this by copying ",(0,r.jsx)(e.code,{children:"*.h"})," to ",(0,r.jsx)(e.code,{children:"/usr/local/include"}),"\nand ",(0,r.jsx)(e.code,{children:"'.a"})," files to ",(0,r.jsx)(e.code,{children:"/usr/local/lib"}),". If not working, check the Go wrapper library\ninstructions ",(0,r.jsx)(e.a,{href:"https://github.com/rpi-ws281x/rpi-ws281x-go",children:"here"}),"."]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},7814:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>c});var s=i(9729);const r={},l=s.createContext(r);function t(n){const e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);