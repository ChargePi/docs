"use strict";(self.webpackChunkchargepi=self.webpackChunkchargepi||[]).push([[107],{5460:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>s});var r=a(758);const l={},t=r.createContext(l);function o(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:o(n.components),r.createElement(t.Provider,{value:e},n.children)}},6656:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ocpp/ocpp-201","title":"OCPP 2.0.1","description":"Configuration for protocol version 2.0.1 can be found in /chargepoint/v201/configuration/configuration.json_.","source":"@site/docs/ocpp/ocpp-201.md","sourceDirName":"ocpp","slug":"/ocpp/ocpp-201","permalink":"/docs/ocpp/ocpp-201","draft":false,"unlisted":false,"editUrl":"https://github.com/ChargePi/ChargePi-docs/edit/master/docs/ocpp/ocpp-201.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"OCPP 1.6","permalink":"/docs/ocpp/ocpp-16"}}');var l=a(6070),t=a(5460);const o={sidebar_position:2},s="OCPP 2.0.1",i={},d=[];function u(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"ocpp-201",children:"OCPP 2.0.1"})}),"\n",(0,l.jsxs)(e.p,{children:["Configuration for protocol version 2.0.1 can be found in ",(0,l.jsx)(e.em,{children:"/charge_point/v201/configuration/configuration.json"}),"."]}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"Note: not available for the Go client (yet)."}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:["In the protocol version 2.0.1, configuration variables are nested in Controllers (postfix - Ctrlr). Each controller has\nvariables represented as a dictionary with attributes: ",(0,l.jsx)(e.strong,{children:"readOnly"}),", ",(0,l.jsx)(e.strong,{children:"value"})," and ",(0,l.jsx)(e.em,{children:"optionally"})," ",(0,l.jsx)(e.strong,{children:"unit"}),". Some\ncontrollers aren't completely supported. For more information regarding OCPP 2.0.1 configuration,\nvisit ",(0,l.jsx)(e.a,{href:"https://www.openchargealliance.org/protocols/ocpp-201/",children:"the official website"}),"."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-json",children:'{\n  "AlignedDataCtrlr": {\n    "Enabled": false,\n    "Measurands": {\n      "readOnly": false,\n      "value": []\n    },\n    "Interval": {\n      "readOnly": false,\n      "value": 50,\n      "unit": "seconds"\n    },\n    "TxEndedMeasurands": {\n      "readOnly": false,\n      "value": []\n    },\n    "TxEndedInterval": {\n      "readOnly": false,\n      "value": 50,\n      "unit": "seconds"\n    }\n  },\n  "AuthCacheCtrlr": {\n    "Enabled": false,\n    "AuthCacheEnabled": {\n      "readOnly": false,\n      "value": true\n    },\n    "AuthCacheLifeTime": {\n      "readOnly": false,\n      "value": true\n    }\n  },\n  "AuthCtrlr": {\n    "Enabled": true,\n    "AuthorizeRemoteStart": {\n      "readOnly": true,\n      "value": true\n    },\n    "AuthEnabled": {\n      "readOnly": false,\n      "value": true\n    },\n    "OfflineTxForUnknownIdEnabled": {\n      "readOnly": false,\n      "value": false\n    },\n    "LocalAuthorizeOffline": {\n      "readOnly": false,\n      "value": true\n    },\n    "LocalPreAuthorize": {\n      "readOnly": false,\n      "value": true\n    }\n  },\n  "CHAdeMOCtrlr": {\n    "Enabled": false\n  },\n  "ClockCtrlr": {\n    "Enabled": false,\n    "DateTime": {\n      "readOnly": true,\n      "value": 1\n    },\n    "TimeSource": {\n      "readOnly": false,\n      "value": [\n        "Heartbeat",\n        "MobileNetwork"\n      ]\n    }\n  },\n  "CustomizationCtrlr": {\n    "Enabled": false\n  },\n  "DeviceDataCtrlr": {\n    "Enabled": false,\n    "ItemsPerMessage": {\n      "readOnly": true,\n      "value": 1\n    },\n    "BytesPerMessage": {\n      "readOnly": true,\n      "value": 1\n    }\n  },\n  "DisplayMessageCtrlr": {\n    "Enabled": false\n  },\n  "ISO15118Ctrlr": {\n    "Enabled": false\n  },\n  "LocalAuthListCtrlr": {\n    "Enabled": false\n  },\n  "MonitoringCtrlr": {\n    "Enabled": false\n  },\n  "OCPPCommCtrlr": {\n    "Enabled": true,\n    "RetryBackOffRepeatTimes": {\n      "readOnly": false,\n      "value": 1\n    },\n    "RetryBackOffRandomRange": {\n      "readOnly": false,\n      "unit": "seconds",\n      "value": 1\n    },\n    "RetryBackOffWaitMinimum": {\n      "readOnly": false,\n      "unit": "seconds",\n      "value": 1\n    },\n    "WebSocketPingInterval": {\n      "readOnly": false,\n      "unit": "seconds",\n      "value": 1\n    },\n    "DefaultMessageTimeout": {\n      "readOnly": true,\n      "unit": "seconds",\n      "value": 1\n    },\n    "FileTransferProtocols": {\n      "readOnly": true,\n      "value": [\n        "HTTP",\n        "HTTPS"\n      ]\n    },\n    "HeartbeatInterval": {\n      "readOnly": false,\n      "unit": "seconds",\n      "value": 60\n    },\n    "NetworkConfigurationPriority": {\n      "readOnly": false,\n      "value": []\n    },\n    "NetworkProfileConnectionAttempts": {\n      "readOnly": false,\n      "value": 1\n    },\n    "OfflineThreshold": {\n      "readOnly": false,\n      "unit": "seconds",\n      "value": 150\n    },\n    "MessageAttempts": {\n      "readOnly": false,\n      "value": 1\n    },\n    "MessageAttemptInterval": {\n      "unit": "seconds",\n      "value": 90,\n      "readOnly": false\n    },\n    "UnlockOnEVSideDisconnect": {\n      "value": true,\n      "readOnly": false\n    },\n    "ResetRetries": {\n      "readOnly": false,\n      "value": 90\n    }\n  },\n  "ReservationCtrlr": {\n    "Enabled": false\n  },\n  "SampledDataCtrlr": {\n    "Enabled": true,\n    "SampledDataEnabled": {\n      "readOnly": false,\n      "value": true\n    },\n    "TxEndedMeasurands": {\n      "readOnly": false,\n      "value": []\n    },\n    "TxEndedInterval": {\n      "readOnly": false,\n      "value": 60,\n      "unit": "seconds"\n    },\n    "TxStartedMeasurands": {\n      "readOnly": false,\n      "value": []\n    },\n    "TxUpdatedMeasurands": {\n      "readOnly": false,\n      "value": []\n    },\n    "TxUpdatedInterval": {\n      "readOnly": false,\n      "value": []\n    }\n  },\n  "SecurityCtrlr": {\n    "Enabled": false,\n    "OrganizationName": {\n      "readOnly": false,\n      "value": "UL FE"\n    },\n    "CertificateEntries": {\n      "readOnly": true,\n      "value": 1\n    },\n    "SecurityProfile": {\n      "readOnly": true,\n      "value": 1\n    }\n  },\n  "SmartChargingCtrlr": {\n    "Enabled": false\n  },\n  "TariffCostCtrlr": {\n    "Enabled": false\n  },\n  "TxCtrlr": {\n    "Enabled": true,\n    "EVConnectionTimeOut": {\n      "readOnly": false,\n      "value": 60,\n      "unit": "seconds"\n    },\n    "StopTxOnEVSideDisconnect": {\n      "readOnly": true,\n      "value": true\n    },\n    "TxStartPoint": {\n      "readOnly": true,\n      "value": [\n        "Authorized"\n      ]\n    },\n    "TxStopPoint": {\n      "readOnly": true,\n      "value": [\n        "PowerPathClosed"\n      ]\n    },\n    "StopTxOnInvalidId": {\n      "readOnly": false,\n      "value": true\n    }\n  }\n}\n'})})]})}function c(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(u,{...n})}):u(n)}}}]);