"use strict";(self.webpackChunkchargepi=self.webpackChunkchargepi||[]).push([[345],{5460:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(758);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},8491:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"modem-setup","title":"Configuring mobile connectivity","description":"Setting up & running Sakis3G","source":"@site/docs-services/modem-setup.md","sourceDirName":".","slug":"/modem-setup","permalink":"/services/modem-setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Charging station with Mender","permalink":"/services/mender"},"next":{"title":"\ud83d\udcdc Logging","permalink":"/services/logging/"}}');var t=s(6070),r=s(5460);const c={sidebar_position:3},o="Configuring mobile connectivity",a={},l=[{value:"Setting up &amp; running Sakis3G",id:"setting-up--running-sakis3g",level:2},{value:"Running as service script:",id:"running-as-service-script",level:2},{value:"References:",id:"references",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuring-mobile-connectivity",children:"Configuring mobile connectivity"})}),"\n",(0,t.jsx)(n.h2,{id:"setting-up--running-sakis3g",children:"Setting up & running Sakis3G"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Update and upgrade:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update & sudo apt-get upgrade\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Installing dependencies and- Sakis3g client:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'sudo apt-get install ppp\nwget "http://raspberry-at-home.com/files/sakis3g.tar.gz"\nsudo mkdir /usr/bin/modem3g\nsudo chmod +x /usr/bin/modem3g\nsudo cp sakis3g.tar.gz /usr/bin/modem3g\ncd /usr/bin/modem3g\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run the client interactively:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo /usr/bin/modem3g/sakis3g connect --interactive\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Get default settings for your modem:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"lsusb\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Paste default settings in a file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/sakis3g.conf\n"})}),"\n",(0,t.jsx)(n.p,{children:"Config file example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'USBDRIVER="option"\nUSBINTERFACE="0"\nAPN="internet"\nMODEM="12d1:155e"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"running-as-service-script",children:"Running as service script:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Make two service files:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/modem-connection.service\nsudo nano /etc/systemd/system/ChargePi.service\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Paste into modem-connection.service file:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    [Unit]\n    Description=Modem connection service\n\n    [Service]\n    Type=simple \n    ExecStart=/usr/bin/modem3g/sakis3g --sudo connect \n    Restart=on-failure \n    RestartSec=5  \n    KillMode=process\n\n    [Install]\n    WantedBy=multi-user.target\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Paste into ChargePi.service file:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    [Unit]\n    Description=ChargePi client \n    After=network.target modem-connection.service\n\n    [Service]\n    Type=simple \n    ExecStart=go build /<path_to_dir>/ChargePi-go/ && ./ChargePi-go\n    Restart=on-failure\n    KillSignal=SIGTERM\n\n    [Install]\n    WantedBy=multi-user.target\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Go should be installed and the binary should be added to PATH variable."})}),"\n",(0,t.jsx)(n.p,{children:"Repeat next steps for both files:"}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["Give permissions and add services to ",(0,t.jsx)(n.strong,{children:"systemd"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo chmod 640 /etc/systemd/system/modem-connection.service\nsystemctl status modem-connection.service\nsudo systemctl daemon-reload\nsudo systemctl enable modem-connection.service\nsudo systemctl start modem-connection.service\n"})}),"\n",(0,t.jsx)(n.h3,{id:"references",children:"References:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"http://raspberry-at-home.com/installing-3g-modem/#more-138",children:"Sakis3g client"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.howtogeek.com/687970/how-to-run-a-linux-program-at-startup-with-systemd/",children:"Systemd services"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://lawrencematthew.wordpress.com/2013/08/07/connect-raspberry-pi-to-a-3g-network-automatically-during-its-boot/",children:"Detailed Modem tutorial"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);