"use strict";(self.webpackChunkchargepi=self.webpackChunkchargepi||[]).push([[43],{4039:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"usage","title":"Usage","description":"You can use ChargeFlow to validate OCPP messages by running the following command:","source":"@site/chargeflow/usage.md","sourceDirName":".","slug":"/usage","permalink":"/chargeflow/usage","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"ChargeFlow","permalink":"/chargeflow/intro"}}');var o=n(6070),t=n(5460);const r={sidebar_position:2},i="Usage",c={},l=[{value:"Request and Response Messages",id:"request-and-response-messages",level:2},{value:"Custom Schemas",id:"custom-schemas",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"usage",children:"Usage"})}),"\n",(0,o.jsx)(s.p,{children:"You can use ChargeFlow to validate OCPP messages by running the following command:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:'chargeflow validate \'[2, "123456", "BootNotification", {"chargePointVendor": "TestVendor", "chargePointModel": "TestModel"}]\'\n'})}),"\n",(0,o.jsx)(s.p,{children:"For more options, you can run:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:'chargeflow validate\n\nValidate the OCPP message(s) against the registered OCPP schema(s).\n\nUsage:\n  chargeflow validate [flags]\n\nExamples:\nchargeflow --version 1.6 validate \'[2, "123456", "BootNotification", {"chargePointVendor": "TestVendor", "chargePointModel": "TestModel"}]\'\n\nFlags:\n  -h, --help             help for validate\n  -a, --schemas string   Path to additional OCPP schemas folder\n\nGlobal Flags:\n  -d, --debug            Enable debug mode\n  -v, --version string   OCPP version to use (1.6 or 2.0.1) (default "1.6")\n'})}),"\n",(0,o.jsx)(s.h2,{id:"request-and-response-messages",children:"Request and Response Messages"}),"\n",(0,o.jsx)(s.p,{children:"ChargeFlow will automatically determine whether it's a request or response message. All you need to provide is a OCPP\nversion!"}),"\n",(0,o.jsx)(s.h2,{id:"custom-schemas",children:"Custom Schemas"}),"\n",(0,o.jsxs)(s.p,{children:["Additionally, you can specify a custom path to vendor-specific OCPP schemas using the ",(0,o.jsx)(s.code,{children:"--schemas"})," flag. This allows you\nto validate messages against custom schemas that are not included in the official OCPP specification."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5460:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var a=n(758);const o={},t=a.createContext(o);function r(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);